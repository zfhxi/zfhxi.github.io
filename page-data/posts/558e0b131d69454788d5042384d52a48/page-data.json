{"componentChunkName":"component---plugins-gine-theme-mod-src-components-post-blog-post-js","path":"/posts/558e0b131d69454788d5042384d52a48","result":{"data":{"siteConfig":{"title":"IGNORANT","commentOpen":true},"posts":{"public_date":"2020-05-17","status":"published","description":null,"name":"Composite模式概念","tags":["DesignPattern"],"categories":["Programming"],"html":"<div data-block-id=\"a8912b5e-f2f1-4085-bc74-377d20dcfe91\" class=\"notion-selectable notion-table_of_contents-block\" style=\"width: 100%; max-width: 608px; margin-top: 2px; margin-bottom: 4px;\"><div style=\"position: relative;\"><div style=\"color: rgba(55, 53, 47, 0.6); fill: rgba(55, 53, 47, 0.6);\"><a href=\"#c605c46c-3f21-4232-bd44-10286dc1d74e\" rel=\"noopener noreferrer\" style=\"display: block; color: inherit; text-decoration: none;\"><div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; width: 100%;\"><div style=\"padding: 6px 2px; font-size: 14px; line-height: 1.3; display: flex; align-items: center; margin-left: 0px;\"><div class=\"notranslate\" style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis; background-image: linear-gradient(to right, rgba(55, 53, 47, 0.16) 0%, rgba(55, 53, 47, 0.16) 100%); background-repeat: repeat-x; background-position: 0px 100%; background-size: 100% 1px;\">目的</div></div></div></a></div><div style=\"color: rgba(55, 53, 47, 0.6); fill: rgba(55, 53, 47, 0.6);\"><a href=\"#dfa877b9-9ac6-4989-8519-8e60a2610c28\" rel=\"noopener noreferrer\" style=\"display: block; color: inherit; text-decoration: none;\"><div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; width: 100%;\"><div style=\"padding: 6px 2px; font-size: 14px; line-height: 1.3; display: flex; align-items: center; margin-left: 0px;\"><div class=\"notranslate\" style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis; background-image: linear-gradient(to right, rgba(55, 53, 47, 0.16) 0%, rgba(55, 53, 47, 0.16) 100%); background-repeat: repeat-x; background-position: 0px 100%; background-size: 100% 1px;\">动机</div></div></div></a></div><div style=\"color: rgba(55, 53, 47, 0.6); fill: rgba(55, 53, 47, 0.6);\"><a href=\"#447b15fe-a05b-4091-88c4-de860057e46f\" rel=\"noopener noreferrer\" style=\"display: block; color: inherit; text-decoration: none;\"><div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; width: 100%;\"><div style=\"padding: 6px 2px; font-size: 14px; line-height: 1.3; display: flex; align-items: center; margin-left: 0px;\"><div class=\"notranslate\" style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis; background-image: linear-gradient(to right, rgba(55, 53, 47, 0.16) 0%, rgba(55, 53, 47, 0.16) 100%); background-repeat: repeat-x; background-position: 0px 100%; background-size: 100% 1px;\">好处</div></div></div></a></div><div style=\"color: rgba(55, 53, 47, 0.6); fill: rgba(55, 53, 47, 0.6);\"><a href=\"#e76935a4-395c-4ce1-91d2-b53e47a9cf91\" rel=\"noopener noreferrer\" style=\"display: block; color: inherit; text-decoration: none;\"><div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; width: 100%;\"><div style=\"padding: 6px 2px; font-size: 14px; line-height: 1.3; display: flex; align-items: center; margin-left: 0px;\"><div class=\"notranslate\" style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis; background-image: linear-gradient(to right, rgba(55, 53, 47, 0.16) 0%, rgba(55, 53, 47, 0.16) 100%); background-repeat: repeat-x; background-position: 0px 100%; background-size: 100% 1px;\">模式的结构</div></div></div></a></div><div style=\"color: rgba(55, 53, 47, 0.6); fill: rgba(55, 53, 47, 0.6);\"><a href=\"#0f801432-76cf-4a48-9b2f-ea36d61170b1\" rel=\"noopener noreferrer\" style=\"display: block; color: inherit; text-decoration: none;\"><div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; width: 100%;\"><div style=\"padding: 6px 2px; font-size: 14px; line-height: 1.3; display: flex; align-items: center; margin-left: 0px;\"><div class=\"notranslate\" style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis; background-image: linear-gradient(to right, rgba(55, 53, 47, 0.16) 0%, rgba(55, 53, 47, 0.16) 100%); background-repeat: repeat-x; background-position: 0px 100%; background-size: 100% 1px;\">适用范围</div></div></div></a></div><div style=\"color: rgba(55, 53, 47, 0.6); fill: rgba(55, 53, 47, 0.6);\"><a href=\"#34a0d6f5-5688-46cb-bb49-5120dc394333\" rel=\"noopener noreferrer\" style=\"display: block; color: inherit; text-decoration: none;\"><div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; width: 100%;\"><div style=\"padding: 6px 2px; font-size: 14px; line-height: 1.3; display: flex; align-items: center; margin-left: 0px;\"><div class=\"notranslate\" style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis; background-image: linear-gradient(to right, rgba(55, 53, 47, 0.16) 0%, rgba(55, 53, 47, 0.16) 100%); background-repeat: repeat-x; background-position: 0px 100%; background-size: 100% 1px;\">评价</div></div></div></a></div></div></div><div data-block-id=\"c605c46c-3f21-4232-bd44-10286dc1d74e\" class=\"notion-selectable notion-header-block\" id=\"c605c46c-3f21-4232-bd44-10286dc1d74e\" style=\"width: 100%; max-width: 608px; margin-top: 2em; margin-bottom: 4px; color: rgb(55, 53, 47);\"><div style=\"display: flex; width: 100%; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, &quot;Apple Color Emoji&quot;, Arial, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-weight: 600; font-size: 1.875em; line-height: 1.3; color: inherit; fill: inherit;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"Heading 1\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">目的</div></div></div><div data-block-id=\"7837c595-d8f6-441d-8595-c2b98ca19538\" class=\"notion-selectable notion-text-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: inherit; fill: inherit;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">将对象组合成树形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。</div></div></div></div><div data-block-id=\"dfa877b9-9ac6-4989-8519-8e60a2610c28\" class=\"notion-selectable notion-header-block\" id=\"dfa877b9-9ac6-4989-8519-8e60a2610c28\" style=\"width: 100%; max-width: 608px; margin-top: 2em; margin-bottom: 4px; color: rgb(55, 53, 47);\"><div style=\"display: flex; width: 100%; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, &quot;Apple Color Emoji&quot;, Arial, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-weight: 600; font-size: 1.875em; line-height: 1.3; color: inherit; fill: inherit;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"Heading 1\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">动机</div></div></div><div data-block-id=\"57b88320-8be3-4e2b-86c8-f174c18b09ba\" class=\"notion-selectable notion-text-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: inherit; fill: inherit;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">在绘图编辑器和图形捕捉系统这样的图形应用系统中，用户可以使用简单的组件创建复杂的图标。用户可以组合多个简单组件以形成一些较大的组件，这些组件又可以组合成更大的组件。一个简单的实现方法是为Text和Line这样的图元定义一些类，另外定义一些类作为这些图元的容器类（Container）。\n然而这种方法存在一个问题：使用这些类的代码必须区别对待图元对象与容器对象，而实际上大多数情况下用户认为它们是一样的。对这些类区别对待，使得程序更加复杂。Composite模式描述了如何使用递归组合，使得用户不比对这些类进行区别，如下图：\n\n</div></div></div></div><div data-block-id=\"d287279f-ae80-4066-bddf-fc374bd8bad6\" class=\"notion-selectable notion-image-block\" style=\"width: 624px; max-width: 800px; align-self: center; margin-top: 0.5em; margin-bottom: 0.5em;\"><div><div style=\"display: flex;\"><div class=\"notion-cursor-default\" style=\"position: relative; overflow: hidden; flex-grow: 1;\"><div style=\"position: relative;\"><div style=\"height: 100%; width: 100%;\"><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F3a1aafd9-6158-4121-a27a-25c685d0138a%2FUntitled.png?table=block&amp;id=d287279f-ae80-4066-bddf-fc374bd8bad6&amp;width=1250&amp;userId=&amp;cache=v2\" style=\"display: block; object-fit: cover; border-radius: 1px; width: 100%; pointer-events: auto;\"></div></div></div></div></div></div><div data-block-id=\"447b15fe-a05b-4091-88c4-de860057e46f\" class=\"notion-selectable notion-header-block\" id=\"447b15fe-a05b-4091-88c4-de860057e46f\" style=\"width: 100%; max-width: 608px; margin-top: 2em; margin-bottom: 4px; color: rgb(55, 53, 47);\"><div style=\"display: flex; width: 100%; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, &quot;Apple Color Emoji&quot;, Arial, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-weight: 600; font-size: 1.875em; line-height: 1.3; color: inherit; fill: inherit;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"Heading 1\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">好处</div></div></div><div data-block-id=\"fc9c1814-7411-472e-9a7d-c64df8b630f2\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\">一些部件对象经过组合构成的复合部件对象仍然具有单个部件对象的接口，这样的复合部件对象称为“容器(Container)”</div></div></div></div></div><div data-block-id=\"11d36e62-1497-4220-bb62-9dac840aba79\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\">复合部件与单个部件具有同样的接口，所有接口包含两部分：单个部件的功能、管理子部件的功能</div></div></div></div></div><div data-block-id=\"3615766a-5c12-4680-aac2-0740fa824ae2\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\">实现递归组合</div></div></div></div></div><div data-block-id=\"d4d11b03-eec2-4a77-9df7-ca20f13999b2\" class=\"notion-selectable notion-text-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: inherit; fill: inherit;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div><div data-block-id=\"e76935a4-395c-4ce1-91d2-b53e47a9cf91\" class=\"notion-selectable notion-header-block\" id=\"e76935a4-395c-4ce1-91d2-b53e47a9cf91\" style=\"width: 100%; max-width: 608px; margin-top: 2em; margin-bottom: 4px; color: rgb(55, 53, 47);\"><div style=\"display: flex; width: 100%; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, &quot;Apple Color Emoji&quot;, Arial, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-weight: 600; font-size: 1.875em; line-height: 1.3; color: inherit; fill: inherit;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"Heading 1\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">模式的结构</div></div></div><div data-block-id=\"ea7159e9-6569-4a0d-8016-46fcf3f4a76b\" class=\"notion-selectable notion-image-block\" style=\"width: 528px; max-width: 800px; align-self: center; margin-top: 0.5em; margin-bottom: 0.5em;\"><div><div style=\"display: flex;\"><div class=\"notion-cursor-default\" style=\"position: relative; overflow: hidden; flex-grow: 1;\"><div style=\"position: relative;\"><div style=\"height: 100%; width: 100%;\"><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe4458666-1a95-4c25-8869-ca30da93e900%2FUntitled.png?table=block&amp;id=ea7159e9-6569-4a0d-8016-46fcf3f4a76b&amp;width=1060&amp;userId=&amp;cache=v2\" style=\"display: block; object-fit: cover; border-radius: 1px; width: 100%; pointer-events: auto;\"></div></div></div></div></div></div><div data-block-id=\"a0bd5b15-b18e-4773-ac39-f03f30c4d7b7\" class=\"notion-selectable notion-text-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: inherit; fill: inherit;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">组合模式结构如上图所示，</div></div></div></div><div data-block-id=\"e2639543-369c-49cd-afeb-155d40836e7c\" class=\"notion-selectable notion-text-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"background: rgb(244, 223, 235);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">其包含以下主要角色：</div></div></div></div><div data-block-id=\"9e29f643-f1b7-4f02-b91d-5585a8080296\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\"><span style=\"font-weight:600\" data-token-index=\"0\">抽象构件</span>（Component）角色：它的<span style=\"font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;line-height:normal;background:rgba(135,131,120,0.15);color:#EB5757;border-radius:3px;font-size:85%;padding:0.2em 0.4em\" data-token-index=\"2\">主要作用是为树叶构件和树枝构件声明公共接口，并实现它们的默认行为</span>。在透明式的组合模式中抽象构件还声明访问和管理子类的接口；在安全式的组合模式中不声明访问和管理子类的接口，管理工作由树枝构件完成。</div></div></div></div></div><div data-block-id=\"86c060b0-5ef8-485c-a086-bd11f338027d\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\"><span style=\"font-weight:600\" data-token-index=\"0\">树叶构件</span>（Leaf）角色：是组合中的叶节点对象，它没有子节点，<span style=\"font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;line-height:normal;background:rgba(135,131,120,0.15);color:#EB5757;border-radius:3px;font-size:85%;padding:0.2em 0.4em\" data-token-index=\"2\">用于实现抽象构件角色中声明的公共接口</span>。</div></div></div></div></div><div data-block-id=\"314cfe35-beb4-497c-92ed-d22c4d25ff2b\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\"><span style=\"font-weight:600\" data-token-index=\"0\">树枝构件</span>（Composite）角色：是组合中的分支节点对象，它有子节点。它<span style=\"font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;line-height:normal;background:rgba(135,131,120,0.15);color:#EB5757;border-radius:3px;font-size:85%;padding:0.2em 0.4em\" data-token-index=\"2\">实现了抽象构件角色中声明的接口，它的主要作用是存储和管理子部件</span>，通常包含 <span style=\"font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;line-height:normal;background:rgba(135,131,120,0.15);color:#EB5757;border-radius:3px;font-size:85%;padding:0.2em 0.4em\" data-token-index=\"4\">Add()</span>、<span style=\"font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;line-height:normal;background:rgba(135,131,120,0.15);color:#EB5757;border-radius:3px;font-size:85%;padding:0.2em 0.4em\" data-token-index=\"6\">Remove()</span>、<span style=\"font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;line-height:normal;background:rgba(135,131,120,0.15);color:#EB5757;border-radius:3px;font-size:85%;padding:0.2em 0.4em\" data-token-index=\"8\">GetChild()</span> 等方法。</div></div></div></div></div><div data-block-id=\"d4aa034c-13c0-45ae-a05d-541dfc3561ea\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\"><span style=\"font-weight:600\" data-token-index=\"0\">客户端</span>（Client）角色：调用抽象构建接口的方法。</div></div></div></div></div><div data-block-id=\"ee247740-ce3d-43e1-9d54-415048e903c1\" class=\"notion-selectable notion-text-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"background: rgb(244, 223, 235);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">组合方式分类</div></div></div></div><div data-block-id=\"3fc3f219-d8d7-4070-812a-95929d33a70d\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\"><span style=\"font-weight:600\" data-token-index=\"0\">透明式组合方式：</span>在该方式中，由于抽象构建声明了所有子类中的全部方法，所以客户端无需区别树叶对象和树枝对象，对客户端来说是透明的。<span style=\"font-weight:600\" data-token-index=\"2\">缺点</span>是：树叶构建本来没有 <span style=\"font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;line-height:normal;background:rgba(135,131,120,0.15);color:#EB5757;border-radius:3px;font-size:85%;padding:0.2em 0.4em\" data-token-index=\"4\">add()</span>、<span style=\"font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;line-height:normal;background:rgba(135,131,120,0.15);color:#EB5757;border-radius:3px;font-size:85%;padding:0.2em 0.4em\" data-token-index=\"6\">remove()</span> 及<span style=\"font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;line-height:normal;background:rgba(135,131,120,0.15);color:#EB5757;border-radius:3px;font-size:85%;padding:0.2em 0.4em\" data-token-index=\"8\"> getChild() </span>等方法，却要实现它们（空实现或抛异常），这样会带来一些安全性问题。</div></div></div></div></div><div data-block-id=\"ecb13db7-8475-4560-8c04-699fb2535a83\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\"><span style=\"font-weight:600\" data-token-index=\"0\">安全式组合方式：</span>在该方式中，将管理自购件的方法移到树枝构件中，抽象构件和树叶构件没有对子对象的管理方法，这样就避免了上一种方式的安全性问题。但由于叶子和分支有不同的接口，客户端在调用时要知道树叶对象和树枝对象的存在，所以<span style=\"font-weight:600\" data-token-index=\"2\">失去了透明性</span>。</div></div></div></div></div><div data-block-id=\"37a13350-b50d-4a16-8beb-5d355cb8081e\" class=\"notion-selectable notion-text-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: inherit; fill: inherit;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div><div data-block-id=\"0f801432-76cf-4a48-9b2f-ea36d61170b1\" class=\"notion-selectable notion-header-block\" id=\"0f801432-76cf-4a48-9b2f-ea36d61170b1\" style=\"width: 100%; max-width: 608px; margin-top: 2em; margin-bottom: 4px; color: rgb(55, 53, 47);\"><div style=\"display: flex; width: 100%; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, &quot;Apple Color Emoji&quot;, Arial, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-weight: 600; font-size: 1.875em; line-height: 1.3; color: inherit; fill: inherit;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"Heading 1\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">适用范围</div></div></div><div data-block-id=\"8e607a00-d924-4b35-b072-71626d1f71e9\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\">想要表示对象的部分-整体层次结构</div></div></div></div></div><div data-block-id=\"3ac323d9-935f-40b6-a1cb-a459446650f5\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\">希望用户忽略组合对象和单个对象的不同，用户将统一地使用组合结构中的所有对象</div></div></div></div></div><div data-block-id=\"34a0d6f5-5688-46cb-bb49-5120dc394333\" class=\"notion-selectable notion-header-block\" id=\"34a0d6f5-5688-46cb-bb49-5120dc394333\" style=\"width: 100%; max-width: 608px; margin-top: 2em; margin-bottom: 4px; color: rgb(55, 53, 47);\"><div style=\"display: flex; width: 100%; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, &quot;Apple Color Emoji&quot;, Arial, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-weight: 600; font-size: 1.875em; line-height: 1.3; color: inherit; fill: inherit;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"Heading 1\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">评价</div></div></div><div data-block-id=\"1ccd6673-ec03-47de-9137-0eeb9902ca60\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\">定义了包含leaf对象和composite对象的类层次接口，是一种递归结构</div></div></div></div></div><div data-block-id=\"4bd7f946-eaca-4c38-96e8-1c0fef3a54c8\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\">客户一致地处理复合对象和单个对象。</div></div></div></div></div><div data-block-id=\"e95e0505-7b59-4708-9a25-15943f7914df\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\">易于增加新类型的组件。</div></div></div></div></div><div data-block-id=\"428f9192-ac13-4df0-b1ea-c15651941c66\" class=\"notion-selectable notion-bulleted_list-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: inherit; fill: inherit;\"><div style=\"margin-right: 2px; width: 24px; display: flex; align-items: center; justify-content: center; flex-grow: 0; flex-shrink: 0; min-height: calc(1.5em + 3px + 3px);\"><div style=\"font-size: 1.5em; line-height: 1; margin-bottom: 0.1em;\">•</div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; text-align: left;\">容易增加新组件也会带来问题：很难限制组合中的组件。有时希望一个组合只能有某些特定的组件，使用Composite时，不能依赖类型系统施加的这些约束，而必须在运行时刻进行检查。</div></div></div></div></div><div data-block-id=\"f97d332c-1656-4a30-a17d-aa8c08fadd1e\" class=\"notion-selectable notion-text-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: inherit; fill: inherit;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div><div data-block-id=\"2ab8c7f3-552b-44ad-b85c-a109bc82ae46\" class=\"notion-selectable notion-text-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: inherit; fill: inherit;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">实现见后文。</div></div></div></div><div data-block-id=\"ce1c1a6f-1adc-4cd2-83d9-e0e79a192aa7\" class=\"notion-selectable notion-text-block\" style=\"width: 100%; max-width: 608px; margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: inherit; fill: inherit;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" class=\"\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">参考文章：</div></div></div></div><div data-block-id=\"72c206ac-3a30-450d-a06c-3e35513ca05d\" class=\"notion-selectable notion-bookmark-block\" style=\"width: 100%; max-width: 608px; margin-top: 4px; margin-bottom: 4px;\"><div><div style=\"display: flex;\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://blog.csdn.net/z55887/article/details/70548861\" style=\"display: block; color: inherit; text-decoration: none; flex-grow: 1; min-width: 0px;\"><div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; width: 100%; display: flex; flex-wrap: wrap-reverse; align-items: stretch; text-align: left; overflow: hidden; border: 1px solid rgba(55, 53, 47, 0.16); border-radius: 3px; position: relative; color: inherit; fill: inherit;\"><div style=\"flex: 4 1 180px; padding: 12px 14px 14px; overflow: hidden; text-align: left;\"><div style=\"font-size: 14px; line-height: 20px; color: rgb(55, 53, 47); white-space: nowrap; overflow: hidden; text-overflow: ellipsis; min-height: 24px; margin-bottom: 2px;\">Head First 设计模式（九）迭代器与组合模式_Java_大树的学习之路-CSDN博客</div><div style=\"font-size: 12px; line-height: 16px; color: rgba(55, 53, 47, 0.6); height: 32px; overflow: hidden;\">迭代器模式提供一种方法顺序访问一个聚合对象中的各个元素，而又不暴露其内部的表示 迭代器模式我们很熟悉，其实就是Java中集合的迭代原理，如果你研究过集合的源码，就会很容易理解这个模式。 现在有两家餐厅：煎饼店和饭店，它们想要合并。两家店的菜单需要统一起来，以便服务员给客户看。 但此时有一个问题，煎饼店和饭店的菜单，实现是不一样的： 从代码我们可以看出，两家店的菜单一个是数组实现，一个是集合实现。 这时，我们想要服务员提供新的菜单时，得分别针对两种不同的底层实现，进行不同的迭代： /** * 打印出菜单 */ public void printMenu() { ArrayList pMenuItems = pancakeMenu.menuItems; for (int i = 0; i &lt; pMenuItems.size(); i++) { MenuItem menuItem = pMenuItems.get(i); System.out.println(menuItem.getName()+\":\"+menuItem.getPrice()); } MenuItem[] dMenuItems = dinnerMenu.menuItems; for (int i = 0,n = dMenuItems.length; i &lt; n; i++) {</div><div style=\"display: flex; margin-top: 6px;\"><img src=\"https://www.notion.so/image/https%3A%2F%2Fcsdnimg.cn%2Fpublic%2Ffavicon.ico?table=block&amp;id=72c206ac-3a30-450d-a06c-3e35513ca05d&amp;userId=&amp;cache=v2\" style=\"width: 16px; height: 16px; min-width: 16px; margin-right: 6px;\"><div style=\"font-size: 12px; line-height: 16px; color: rgb(55, 53, 47); white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\">https://blog.csdn.net/z55887/article/details/70548861</div></div></div><div style=\"flex: 1 1 180px; display: block; position: relative;\"><div style=\"position: absolute; top: 0px; left: 0px; right: 0px; bottom: 0px;\"><div style=\"width: 100%; height: 100%;\"><img src=\"https://img-blog.csdn.net/20170423225834709?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvejU1ODg3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" style=\"display: block; object-fit: cover; border-radius: 1px; width: 100%; height: 100%;\"></div></div></div></div></a></div></div></div><div data-block-id=\"c2977a2d-2b48-4bac-8021-0dec11cf79a7\" class=\"notion-selectable notion-bookmark-block\" style=\"width: 100%; max-width: 608px; margin-top: 4px; margin-bottom: 0px;\"><div><div style=\"display: flex;\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.cnblogs.com/wuqinglong/p/12425411.html\" style=\"display: block; color: inherit; text-decoration: none; flex-grow: 1; min-width: 0px;\"><div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; width: 100%; display: flex; flex-wrap: wrap-reverse; align-items: stretch; text-align: left; overflow: hidden; border: 1px solid rgba(55, 53, 47, 0.16); border-radius: 3px; position: relative; color: inherit; fill: inherit;\"><div style=\"flex: 4 1 180px; padding: 12px 14px 14px; overflow: hidden; text-align: left;\"><div style=\"font-size: 14px; line-height: 20px; color: rgb(55, 53, 47); white-space: nowrap; overflow: hidden; text-overflow: ellipsis; min-height: 24px; margin-bottom: 2px;\">www.cnblogs.com</div><div style=\"display: flex; margin-top: 6px;\"><div style=\"font-size: 12px; line-height: 16px; color: rgb(55, 53, 47); white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\">https://www.cnblogs.com/wuqinglong/p/12425411.html</div></div></div></div></a></div></div></div>","slug":"558e0b131d69454788d5042384d52a48"}},"pageContext":{"slug":"558e0b131d69454788d5042384d52a48"}},"staticQueryHashes":["51046549"]}